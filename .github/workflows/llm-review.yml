name: SeineSailor

permissions:
  contents: read
  pull-requests: write
  issues: write
  discussions: write

on:
  issues:
    types: [ opened ]
  issue_comment:
  discussion:
  discussion_comment:
  pull_request_review_comment:
    types: [ created ]
  pull_request_target:
    types: [ opened, synchronize, reopened, edited ]
  workflow_dispatch:
    inputs:
      payload:
        description: 'The payload of the event that invokes this trigger'
        required: false
      event_name:
        description: 'The name of the event that invokes this trigger'
        required: false

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name }}
  cancel-in-progress: ${{ github.event_name == 'pull_request_target' }}

jobs:
  seinesailor:
    if: |
      github.event_name == 'workflow_dispatch' ||
      github.event_name == 'pull_request_target' ||
      (contains(github.event.comment.body, '@SeineSailor') && (
        github.event_name == 'issue_comment' || 
        github.event_name == 'pull_request_review_comment' ||
        github.event_name == 'discussion_comment')) ||
      (github.event_name == 'issues' && contains(github.event.issue.body, '@SeineSailor')) ||
      (github.event_name == 'discussion' && contains(github.event.discussion.body, '@SeineSailor'))
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      IBM_CLOUD_API_KEY: ${{ secrets.IBM_CLOUD_API_KEY }}
      WATSONX_PROJECT_ID: ${{ secrets.WATSONX_PROJECT_ID }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      REDIRECT_EVENT_NAME: ${{ github.event.inputs.event_name }}
      REDIRECT_EVENT_PAYLOAD: ${{ github.event.inputs.payload }}
    steps:
      - name: Check if redirected
        id: check_redirect
        run: |
          if [ "${{ github.event.inputs.event_name }}" != "" ]; then
            echo "This is a redirected run"
            echo "is_redirected=true" >> $GITHUB_ENV
          else
            echo "This is the initial run"
            echo "is_redirected=false" >> $GITHUB_ENV
          fi
      - name: Check for mention outside of quotes in comments
        id: check_mention
        if: env.is_redirected == 'false'
        env:
          COMMENT_BODY: ${{ github.event.comment.body }}
        run: |
          echo "checking for mention outside of quotes and code blocks"
          mention_outside_quotes=false
          in_code_block=false
          while IFS= read -r line; do
            # Check for start or end of a code block
            if [[ "$line" =~ ^\`\`\` ]]; then
              if [[ "$in_code_block" = true ]]; then
                in_code_block=false
              else
                in_code_block=true
              fi
            fi
        
            # Process lines that are not in a code block or quoted
            if [[ "$in_code_block" = false && ! "$line" =~ ^\> ]]; then
              if echo "$line" | grep -q '@SeineSailor'; then
                mention_outside_quotes=true
                break
              fi
            fi
          done <<< "$COMMENT_BODY"
          echo "mention_outside_quotes=$mention_outside_quotes" >> $GITHUB_ENV
      - name: Check for empty API KEYs
        id: check_secret
        if: env.is_redirected == 'false'
        run: |
          if [[ "${{ secrets.IBM_CLOUD_API_KEY }}" == "" 
          && "${{ secrets.OPENAI_API_KEY }}" == "" 
          && "${{ github.event_name }}" == "pull_request_review_comment" ]]; then
            echo "Both IBM_CLOUD_API_KEY and OPENAI_API_KEY are empty, assuming triggered by a forked repo"
            echo "needs_redirect=true" >> $GITHUB_ENV
          else
            echo "needs_redirect=false" >> $GITHUB_ENV
          fi
      - name: Trigger Self Workflow in the base repo
        if: env.needs_redirect == 'true'
        run: |
          workflow_filename=$(echo $GITHUB_WORKFLOW_REF | awk -F'@' '{print $1}' | awk -F'/' '{print $NF}')
          echo "extracted workflow_filename: $workflow_filename"
          curl -L -X POST -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/$workflow_filename/dispatches \
            -d '{"ref": "main", "inputs": {"payload": "${{ toJson(github.event) }}", "event_name": "${{ github.event_name }}"}}'
        shell: bash
#      - name: Dump GitHub context for debug
#        env:
#          EVENT_CONTEXT: ${{ toJson(github) }}
#        run: |
#          echo "EVENT_CONTEXT"
      - name: Dump event payload for debug
        run: cat $GITHUB_EVENT_PATH
      - name: Run SeineSailor
        if: env.needs_redirect != 'true'
        uses: SeineAI/SeineSailor@dev-action-only-do-not-merge-or-delete
        with:
          debug: true
